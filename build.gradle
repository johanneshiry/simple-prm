import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

plugins {
  id 'java' //java support
  id 'scala'
  id 'com.diffplug.spotless' version '6.10.0'
  id "de.undercouch.download" version "5.1.0" // downloads plugin
  id "com.github.johnrengelman.shadow" version "7.1.2" // fat jar
  id "com.github.maiflai.scalatest" version "0.32"
  id "org.sonarqube" version "3.3" // sonarqube
}

ext {
  javaVersion = JavaVersion.VERSION_17

  scalaMajorVersion = '3'
  scalaVersion = '3.1.2'
  akkaVersion = '2.6.19'

  tscfgVersion = '0.9.997'

  scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator
}

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(javaVersion.toString()))
  }
}

group = 'com.github.johanneshiry'
description = 'Simple PRM'

apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'tscfg.gradle' // config tasks
apply from: scriptsLocation + 'sonarqube.gradle' // sonarqube config
apply from: scriptsLocation + 'tests.gradle' // tasks for tests

repositories {
  mavenCentral()

  // sonatype snapshot repo
  maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {

  // scala core
  implementation "org.scala-lang:scala3-library_3:$scalaVersion"
  implementation 'org.scala-lang.modules:scala-parallel-collections_3:1.0.4'

  // akka
  implementation "com.typesafe.akka:akka-actor-typed_2.13:${akkaVersion}"
  implementation "com.typesafe.akka:akka-stream-typed_2.13:${akkaVersion}"
  implementation "com.typesafe.akka:akka-http_2.13:10.2.9"
  implementation platform("com.typesafe.akka:akka-bom_2.13:${akkaVersion}")
  testImplementation "com.typesafe.akka:akka-actor-testkit-typed_2.13:${akkaVersion}"

  // akka http cors
  implementation('ch.megard:akka-http-cors_3:1.1.3') {
    exclude group: 'com.typesafe.akka'
  }

  // json parsing with circe
  implementation 'de.heikoseeberger:akka-http-circe_2.13:1.40.0-RC2'
  implementation 'io.circe:circe-core_3:0.15.0-M1'
  implementation 'io.circe:circe-generic_3:0.15.0-M1'
  implementation 'io.circe:circe-parser_3:0.15.0-M1'

  // logging
  implementation "com.typesafe.scala-logging:scala-logging_${scalaMajorVersion}:3.9.5"
  implementation 'ch.qos.logback:logback-classic:1.2.11'

  // config
  implementation "com.github.scopt:scopt_${scalaMajorVersion}:4.0.1" // cmd args parser

  // webdav client library
  implementation 'com.github.lookfirst:sardine:5.10'
  // todo exclude vulnerable dependencies -> https://mvnrepository.com/artifact/com.github.lookfirst/sardine/5.10

  // card dav parser
  implementation 'com.googlecode.ez-vcard:ez-vcard:0.11.3'

  // mongo db driver
  implementation('org.reactivemongo:reactivemongo_3:1.1.0-RC4') {
    exclude group: 'org.slf4j'
    exclude group: 'com.typesafe.akka' // uses akka scala 3 otherwise
  }

  implementation('io.github.johanneshiry:linkedin-scraper:0.1-SNAPSHOT')
  implementation('io.github.bonigarcia:webdrivermanager:5.1.1')
  implementation('org.seleniumhq.selenium:selenium-java:4.1.4')

  // send e-mails
  implementation "com.github.eikek:emil-common_$scalaMajorVersion:0.12.0"
  implementation "com.github.eikek:emil-javamail_$scalaMajorVersion:0.12.0"

  // testing
  testImplementation "org.scalatest:scalatest_$scalaMajorVersion:3.2.12"
  testRuntimeClasspath 'com.vladsch.flexmark:flexmark-all:0.64.0'
  testImplementation 'org.pegdown:pegdown:1.6.0'

}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
  options.encoding = 'UTF-8'
}

shadowJar {
  transform(AppendingTransformer) {
    resource = 'reference.conf'
  }
  zip64 = true
}
